# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2017-04-02 13:58
from __future__ import unicode_literals

from django.db import migrations


def forwards_func(apps, schema_editor):
    """Grant permissions for TwitterAccount to admins and mods.

    Includes creating a new view permission.
    """
    # We can't import the models directly as they may be newer versions than this migration expects.
    # We use the historical versions instead.
    Group = apps.get_model('auth', 'Group')
    Permission = apps.get_model('auth', 'Permission')
    ContentType = apps.get_model('contenttypes', 'ContentType')
    TwitterAccount = apps.get_model('twitter', 'TwitterAccount')

    db_alias = schema_editor.connection.alias

    admins = Group.objects.using(db_alias).get(name="Administratoren")
    mods = Group.objects.using(db_alias).get(name="Moderatoren")

    content_type = ContentType.objects.get_for_model(TwitterAccount)
    for perm_type in ['add', 'change', 'delete', 'view']:
        permission, _ = Permission.objects.get_or_create(
            codename='%s_twitteraccount' % perm_type,
            name='Can %s twitter account' % perm_type,
            content_type=content_type,
        )
        admins.permissions.add(permission)
        mods.permissions.add(permission)


def reverse_func(apps, schema_editor):
    """Removes permissions for TwitterAccount from admins and mods.

    Includes deleting (in addition to unassigning) the view permission.
    """
    Group = apps.get_model('auth', 'Group')
    Permission = apps.get_model('auth', 'Permission')
    ContentType = apps.get_model('contenttypes', 'ContentType')
    TwitterAccount = apps.get_model('twitter', 'TwitterAccount')

    db_alias = schema_editor.connection.alias

    admins = Group.objects.using(db_alias).get(name="Administratoren")
    mods = Group.objects.using(db_alias).get(name="Moderatoren")

    content_type = ContentType.objects.get_for_model(TwitterAccount)
    for perm_type in ['add', 'change', 'delete', 'view']:
        permission = Permission.objects.get(codename='%s_twitteraccount' % perm_type)
        admins.permissions.remove(permission)
        mods.permissions.remove(permission)

    Permission.objects.using(db_alias).filter(content_type=content_type, codename__contains='view').delete()


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0003_auto_20160927_1456'),
        ('twitter', '0005_auto_20170226_1348'),
    ]

    operations = [
        migrations.RunPython(forwards_func, reverse_func),
    ]
